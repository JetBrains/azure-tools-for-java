import com.microsoft.azuretools.plugins.BundleBuildIDEAPlugin
import org.apache.tools.ant.filters.*

plugins {
    id "com.github.ben-manes.versions" version "0.28.0"
    id "com.github.spotbugs" version "4.6.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = javaVersion
//    ajc {
//        enabled = false
//    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion
//    ajc {
//        enabled = false
//    }
}

processResources {
    filesMatching('**/ApplicationInsights.xml') {
        filter(ReplaceTokens, tokens: ["applicationinsights.key": project.property("applicationinsights.key")])
    }
}

apply plugin: 'checkstyle'
// Disable plugin because it is not compatible with Java 11 that we use for building pliugin now.
//apply plugin: 'findbugs'
apply plugin: BundleBuildIDEAPlugin

checkstyle {
    toolVersion = '8.30'
    // Get the right path since Java/IDEA-related logic is moved to a separate "idea" module.
    configFile = new File("${rootProject.projectDir.absolutePath}/config/checkstyle/checkstyle.xml")
    showViolations = false
}

//findbugs {
//    toolVersion = "3.0.1"
//    ignoreFailures = true
//}

intellij {
    pluginName = intellij_pluginname
    version = intellij_version
    updateSinceUntilBuild = Boolean.valueOf(updateVersionRange)
    plugins = ['java', 'maven', 'gradle', dep_plugins, "properties", 'markdown', 'terminal']
    downloadSources = Boolean.valueOf(sources)
}

configurations {
    compile.exclude module:'stax-api'
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

dependencies {
    compile rootProject

    compile group: 'org.dom4j', name: 'dom4j', version: '2.1.3'
    compile group: 'jaxen', name: 'jaxen', version: '1.2.0'
    compile 'com.microsoft.azure:azure-toolkit-springcloud-lib:0.3.0', { force = true }

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    testCompile 'junit:junit:4.13'
    testCompile 'info.cukes:cucumber-junit:1.2.6'
    testCompile 'info.cukes:cucumber-java:1.2.6'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.assertj:assertj-swing-junit:3.9.2'

    testCompile 'com.github.tomakehurst:wiremock:2.26.3'
    testCompile 'org.powermock:powermock-module-junit4:1.7.0RC4'
    testCompile 'org.powermock:powermock-api-mockito2:1.7.0RC4'
    testCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.jetbrains.kotlin:kotlin-stdlib"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task cucumberPackJar(type: Jar) {
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.cucumberRuntime.files.collect {
                it.toURI().toString().replaceFirst(/file:\/+/, '/')
            }.join(' ')
        }
    }
}

task cucumber() {
    dependsOn compileTestJava, cucumberPackJar
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = files(sourceSets.main.output, sourceSets.test.output, cucumberPackJar.archivePath)
            args = [
                    '--plugin', 'progress',
                    '--glue', 'com.microsoft.azure.hdinsight.spark.common',
                    '-m',
                    'Test/resources']
        }
    }
}

test.dependsOn cucumber

defaultTasks 'buildPlugin'

installIdea.dependsOn buildPlugin
// Disable check style as it is failed with existing rules that require copyright, etc.
//installIdea.dependsOn checkstyleMain

patchPluginXml {
    sinceBuild = patchPluginXmlSinceBuild
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
    ignoreFailures = true
    showStackTraces = true
    showProgress = true
    effort = 'max'
    reportLevel = 'high'
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
    includeFilter = file("$rootProject.projectDir/../../tools/spotbugs-security-include.xml")
    excludeFilter = file("$rootProject.projectDir/../../tools/spotbugs-security-exclude.xml")
}
